"use strict";(self.webpackChunklakesoul_website=self.webpackChunklakesoul_website||[]).push([[3708],{2126:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var t=s(5893),n=s(1151);const l={},r="Multiple Kafka Topics Data to LakeSoul Tutorial",o={id:"Tutorials/kafka-topics-data-to-lakesoul",title:"Multiple Kafka Topics Data to LakeSoul Tutorial",description:"\x3c!--",source:"@site/docs/02-Tutorials/07-kafka-topics-data-to-lakesoul.md",sourceDirName:"02-Tutorials",slug:"/Tutorials/kafka-topics-data-to-lakesoul",permalink:"/docs/Tutorials/kafka-topics-data-to-lakesoul",draft:!1,unlisted:!1,editUrl:"https://github.com/lakesoul-io/LakeSoul/tree/main/website/docs/02-Tutorials/07-kafka-topics-data-to-lakesoul.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Multi Stream Merge to Build Wide Table Tutorial",permalink:"/docs/Tutorials/mutil-stream-merge"},next:{title:"Incremental Query Function Tutorial",permalink:"/docs/Tutorials/incremental-query"}},i={},c=[{value:"1. Prepare the environment",id:"1-prepare-the-environment",level:2},{value:"2. Start LakeSoul Kafka Stream Task",id:"2-start-lakesoul-kafka-stream-task",level:2},{value:"3. Example of task process",id:"3-example-of-task-process",level:2}];function d(e){const a={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"multiple-kafka-topics-data-to-lakesoul-tutorial",children:"Multiple Kafka Topics Data to LakeSoul Tutorial"}),"\n",(0,t.jsx)(a.p,{children:"It is very convenient to synchronize the data in Kafka to LakeSoul by LakeSoul Kafka Stream."}),"\n",(0,t.jsx)(a.p,{children:"LakeSoul Kafka Stream can support automatic table creation, automatic identification of new topics, exactly once\nsemantics, add partition for table etc."}),"\n",(0,t.jsx)(a.p,{children:"LakeSoul Kafka Stream mainly use Spark Structured Streaming to realize data synchronization function."}),"\n",(0,t.jsx)(a.p,{children:"In this tutorial, we fully demonstrate synchronizing data in topics to LakeSoul, including automatic table creation,\nidentifier new topics and other operations."}),"\n",(0,t.jsxs)(a.admonition,{type:"caution",children:[(0,t.jsx)(a.mdxAdmonitionTitle,{}),(0,t.jsx)(a.p,{children:"Using LakeSoul Kafka Stream requires one of the following conditions:"}),(0,t.jsxs)(a.ol,{children:["\n",(0,t.jsx)(a.li,{children:"the data in topic is json string;"}),"\n",(0,t.jsx)(a.li,{children:"Kafka cluster with Schema Registry service."}),"\n"]})]}),"\n",(0,t.jsx)(a.h2,{id:"1-prepare-the-environment",children:"1. Prepare the environment"}),"\n",(0,t.jsxs)(a.p,{children:["You can compile the LakeSoul project to obtain LakeSoul Kafka Stream jar, or get LakeSoul Kafka Stream jar and others  related jars from ",(0,t.jsx)(a.a,{href:"https://dmetasoul-bucket.obs.cn-southwest-2.myhuaweicloud.com/releases/lakesoul/lakesoul-kafka-stream-3.3.tar.gz",children:"https://dmetasoul-bucket.obs.cn-southwest-2.myhuaweicloud.com/releases/lakesoul/lakesoul-kafka-stream-3.3.tar.gz"}),"."]}),"\n",(0,t.jsx)(a.p,{children:"After decompression, put the jar package into $SPARK_HOME/jars directory or config dependent jars with --jars or other\nmethods when submitting tasks."}),"\n",(0,t.jsx)(a.h2,{id:"2-start-lakesoul-kafka-stream-task",children:"2. Start LakeSoul Kafka Stream Task"}),"\n",(0,t.jsxs)(a.ol,{children:["\n",(0,t.jsxs)(a.li,{children:["Pass ",(0,t.jsx)(a.code,{children:"lakesoul_home"})," environment variable to your job. For detailed documentation, please refer\nto ",(0,t.jsx)(a.a,{href:"/docs/Getting%20Started/setup-local-env",children:"Setup a local test environment"})]}),"\n",(0,t.jsx)(a.li,{children:"Submit task. you need to fill in some parameters in sequence in order to ensure that the task can run accurately. The parameters are described as follows:"}),"\n"]}),"\n",(0,t.jsx)(a.p,{children:"Description of required parameters:"}),"\n",(0,t.jsxs)(a.table,{children:[(0,t.jsx)(a.thead,{children:(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.th,{children:"Parameter Order"}),(0,t.jsx)(a.th,{children:"Meaning"}),(0,t.jsx)(a.th,{children:"required"}),(0,t.jsx)(a.th,{children:"Value Example"})]})}),(0,t.jsxs)(a.tbody,{children:[(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"First"}),(0,t.jsx)(a.td,{children:"Kafka bootstrap.servers"}),(0,t.jsx)(a.td,{children:"true"}),(0,t.jsx)(a.td,{children:"localhost:9092"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Second"}),(0,t.jsx)(a.td,{children:"Topic regular expression"}),(0,t.jsx)(a.td,{children:"true"}),(0,t.jsx)(a.td,{children:"test.*"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Third"}),(0,t.jsx)(a.td,{children:"Data storage path prefix"}),(0,t.jsx)(a.td,{children:"true"}),(0,t.jsx)(a.td,{children:"/tmp/lakesoul/data"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Fourth"}),(0,t.jsx)(a.td,{children:"Task checkpoint path"}),(0,t.jsx)(a.td,{children:"true"}),(0,t.jsx)(a.td,{children:"/tmp/lakesoul/checkpoint"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Fifth"}),(0,t.jsx)(a.td,{children:"Database name in LakeSoul"}),(0,t.jsx)(a.td,{children:"true"}),(0,t.jsx)(a.td,{children:"kafka"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Sixth"}),(0,t.jsx)(a.td,{children:"data sync beginning offset"}),(0,t.jsx)(a.td,{children:"true"}),(0,t.jsx)(a.td,{children:"'earliest' or 'latest'"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Seventh"}),(0,t.jsx)(a.td,{children:"whether add partition for tables"}),(0,t.jsx)(a.td,{children:"true"}),(0,t.jsx)(a.td,{children:"'true' or 'false'"})]}),(0,t.jsxs)(a.tr,{children:[(0,t.jsx)(a.td,{children:"Eighth"}),(0,t.jsx)(a.td,{children:"Schema Registry Url"}),(0,t.jsx)(a.td,{children:"false"}),(0,t.jsx)(a.td,{children:(0,t.jsx)(a.a,{href:"http://localhost:8081",children:"http://localhost:8081"})})]})]})]}),"\n",(0,t.jsx)(a.admonition,{type:"tip",children:(0,t.jsx)(a.p,{children:"If set the Seventh parameter (add partition for tables): true, then partition field named 'lakesoul_dt' will be created automatically for all tables, and the value is timestamp with 'yyyyMMddHH' format."})}),"\n",(0,t.jsx)(a.h2,{id:"3-example-of-task-process",children:"3. Example of task process"}),"\n",(0,t.jsxs)(a.ol,{children:["\n",(0,t.jsx)(a.li,{children:"Suppose the Kafka cluster already exists. Here, run Kafka cluster through Docker Compose. Then create a topic named 'test' and write some data to it. Kafka bootstrap.servers: localhost:9092."}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:'# create topic \'test\'\nbin# ./kafka-topics.sh --create --topic test --bootstrap-server localhost:9092 --replication-factor 1 --partitions 4\n\n# show topic list\nbin# ./kafka-topics.sh  --list --bootstrap-server localhost:9092\ntest\n\n# write data to test \'topic\'\nbin# ./kafka-console-producer.sh --bootstrap-server localhost:9092 --topic test\n>{"before":{"id":1,"rangeid":2,"value":"sms"},"after":{"id":2,"rangeid":2,"value":"sms"},"source":{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null},"op":"c","ts_ms":1644461444777,"transaction":1}\n>{"before":{"id":2,"rangeid":2,"value":"sms"},"after":{"id":2,"rangeid":2,"value":"sms"},"source":{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null},"op":"c","ts_ms":1644461444777,"transaction":2}\n>{"before":{"id":3,"rangeid":2,"value":"sms"},"after":{"id":2,"rangeid":2,"value":"sms"},"source":{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null},"op":"c","ts_ms":1644461444777,"transaction":3}\n>{"before":{"id":4,"rangeid":2,"value":"sms"},"after":{"id":2,"rangeid":2,"value":"sms"},"source":{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null},"op":"c","ts_ms":1644461444777,"transaction":4}\n>{"before":{"id":5,"rangeid":2,"value":"sms"},"after":{"id":2,"rangeid":2,"value":"sms"},"source":{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null},"op":"c","ts_ms":1644461444777,"transaction":5}\n'})}),"\n",(0,t.jsxs)(a.ol,{start:"2",children:["\n",(0,t.jsx)(a.li,{children:"Submit Kafka Stream task. Put the above dependent jars to $SPARK_HOME/jars directory here."}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:"export lakesoul_home=./pg.properties && ./bin/spark-submit \\\n--class org.apache.spark.sql.lakesoul.kafka.KafkaStream \\\n--driver-memory 4g \\\n--executor-memory 4g \\\n--master local[4] \\\n./jars/lakesoul-spark-2.5.1-spark-3.3.jar \\\nlocalhost:9092 test.* /tmp/kafka/data /tmp/kafka/checkpoint/ kafka earliest false\n"})}),"\n",(0,t.jsxs)(a.ol,{start:"3",children:["\n",(0,t.jsx)(a.li,{children:"Select data in LakeSoul by spark-shell."}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:'scala> import com.dmetasoul.lakesoul.tables.LakeSoulTable\nimport com.dmetasoul.lakesoul.tables.LakeSoulTable\n\nscala> val tablepath="/tmp/kafka/data/kafka/test"\ntablepath: String = /tmp/kafka/data/kafka/test\n\nscala> val lake = LakeSoulTable.forPath(tablepath)\nlake: com.dmetasoul.lakesoul.tables.LakeSoulTable = com.dmetasoul.lakesoul.tables.LakeSoulTable@585a2ad9\n\nscala> lake.toDF.show(false)\n+----------------------------------+----------------------------------+---+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+-------------+\n|after                             |before                            |op |source                                                                                                                                                                                                                                                                                                 |transaction|ts_ms        |\n+----------------------------------+----------------------------------+---+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+-------------+\n|{"id":2,"rangeid":2,"value":"sms"}|{"id":1,"rangeid":2,"value":"sms"}|c  |{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null}|1          |1644461444777|\n|{"id":2,"rangeid":2,"value":"sms"}|{"id":3,"rangeid":2,"value":"sms"}|c  |{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null}|3          |1644461444777|\n|{"id":2,"rangeid":2,"value":"sms"}|{"id":5,"rangeid":2,"value":"sms"}|c  |{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null}|5          |1644461444777|\n|{"id":2,"rangeid":2,"value":"sms"}|{"id":2,"rangeid":2,"value":"sms"}|c  |{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null}|2          |1644461444777|\n|{"id":2,"rangeid":2,"value":"sms"}|{"id":4,"rangeid":2,"value":"sms"}|c  |{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null}|4          |1644461444777|\n+----------------------------------+----------------------------------+---+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+-------------+\n'})}),"\n",(0,t.jsxs)(a.ol,{start:"4",children:["\n",(0,t.jsx)(a.li,{children:"Add new topic 'test_1' and write some data to it."}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:'# create topic \'test_1\' \nbin# ./kafka-topics.sh --create --topic test_1 --bootstrap-server localhost:9092 --replication-factor 1 --partitions 4\n\n# show topic list\nbin# ./kafka-topics.sh  --list --bootstrap-server localhost:9092\ntest\ntest_1\n\n# write data to topic \'test_1\'\nbin# ./kafka-console-producer.sh --bootstrap-server localhost:9092 --topic test_1\n>{"before":{"id":1,"rangeid":2,"value":"sms"},"after":{"id":1,"rangeid":1,"value":"sms"},"source":{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null},"op":"c","ts_ms":1644461444777,"transaction":1}\n>{"before":{"id":2,"rangeid":2,"value":"sms"},"after":{"id":2,"rangeid":2,"value":"sms"},"source":{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null},"op":"c","ts_ms":1644461444777,"transaction":2}\n>{"before":{"id":3,"rangeid":2,"value":"sms"},"after":{"id":3,"rangeid":3,"value":"sms"},"source":{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null},"op":"c","ts_ms":1644461444777,"transaction":3}\n>{"before":{"id":4,"rangeid":2,"value":"sms"},"after":{"id":4,"rangeid":4,"value":"sms"},"source":{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null},"op":"c","ts_ms":1644461444777,"transaction":4}\n>{"before":{"id":5,"rangeid":2,"value":"sms"},"after":{"id":5,"rangeid":5,"value":"sms"},"source":{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null},"op":"c","ts_ms":1644461444777,"transaction":5}\n'})}),"\n",(0,t.jsxs)(a.ol,{start:"5",children:["\n",(0,t.jsx)(a.li,{children:"The new topic data synchronization take 5 minutes. Check the 'test_1' data after 5 minutes."}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:'scala> val tablepath_1="/tmp/kafka/data/kafka/test_1"\ntablepath_1: String = /tmp/kafka/data/kafka/test_1\n\nscala> val lake_1 = LakeSoulTable.forPath(tablepath_1)\nlake: com.dmetasoul.lakesoul.tables.LakeSoulTable = com.dmetasoul.lakesoul.tables.LakeSoulTable@43900101\n\nlake_1.toDF.show(false)\n+----------------------------------+----------------------------------+----+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+-------------+\n|after                             |before                            |op  |source                                                                                                                                                                                                                                                                                                 |transaction|ts_ms        |\n+----------------------------------+----------------------------------+----+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+-------------+\n|{"id":2,"rangeid":2,"value":"sms"}|{"id":2,"rangeid":2,"value":"sms"}|c   |{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null}|2          |1644461444777|\n|{"id":1,"rangeid":1,"value":"sms"}|{"id":1,"rangeid":2,"value":"sms"}|c   |{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null}|1          |1644461444777|\n|{"id":4,"rangeid":4,"value":"sms"}|{"id":4,"rangeid":2,"value":"sms"}|c   |{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null}|4          |1644461444777|\n|{"id":3,"rangeid":3,"value":"sms"}|{"id":3,"rangeid":2,"value":"sms"}|c   |{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null}|3          |1644461444777|\n|{"id":5,"rangeid":5,"value":"sms"}|{"id":5,"rangeid":2,"value":"sms"}|c   |{"version":"1.8.0.Final","connector":"mysql","name":"cdcserver","ts_ms":1644461444000,"snapshot":"false","db":"cdc","sequence":null,"table":"sms","server_id":529210004,"gtid":"de525a81-57f6-11ec-9b60-fa163e692542:1621099","file":"binlog.000033","pos":54831329,"row":0,"thread":null,"query":null}|5          |1644461444777|\n+----------------------------------+----------------------------------+----+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+-------------+\n'})}),"\n",(0,t.jsxs)(a.ol,{start:"6",children:["\n",(0,t.jsx)(a.li,{children:"Submitting task with schema registry url parameter if Kafka cluster operated with Schema Registry service."}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:"export lakesoul_home=./pg.properties && ./bin/spark-submit \\\n--class org.apache.spark.sql.lakesoul.kafka.KafkaStream \\\n--driver-memory 4g \\\n--executor-memory 4g \\\n--master local[4] \\\n./jars/lakesoul-spark-2.5.1-spark-3.3.jar \\\nlocalhost:9092 test.* /tmp/kafka/data /tmp/kafka/checkpoint/ kafka earliest false http://localhost:8081\n"})})]})}function u(e={}){const{wrapper:a}={...(0,n.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,a,s)=>{s.d(a,{Z:()=>o,a:()=>r});var t=s(7294);const n={},l=t.createContext(n);function r(e){const a=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),t.createElement(l.Provider,{value:a},e.children)}}}]);