"use strict";(self.webpackChunklakesoul_website=self.webpackChunklakesoul_website||[]).push([[9979],{4879:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var t=s(5893),i=s(1151);const r={},l="Deploy HA PostgreSQL Cluster",o={id:"Deployment/Postgres-Cluster",title:"Deploy HA PostgreSQL Cluster",description:"\x3c!--",source:"@site/docs/04-Deployment/01-Postgres-Cluster.md",sourceDirName:"04-Deployment",slug:"/Deployment/Postgres-Cluster",permalink:"/docs/Deployment/Postgres-Cluster",draft:!1,unlisted:!1,editUrl:"https://github.com/lakesoul-io/LakeSoul/tree/main/website/docs/04-Deployment/01-Postgres-Cluster.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Read and write LakeSoul in Spark Gluten",permalink:"/docs/Usage Docs/spark-gluten/"}},a={},c=[{value:"Pigsty",id:"pigsty",level:2},{value:"Download",id:"download",level:3},{value:"Install and Deploy",id:"install-and-deploy",level:3},{value:"Check",id:"check",level:3},{value:"Monitor",id:"monitor",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"deploy-ha-postgresql-cluster",children:"Deploy HA PostgreSQL Cluster"}),"\n",(0,t.jsx)(n.h2,{id:"pigsty",children:"Pigsty"}),"\n",(0,t.jsx)(n.p,{children:"We recommend using automation tools such as Pigsty to deploy a production PostgreSQL cluster with HA."}),"\n",(0,t.jsxs)(n.p,{children:["Pigsty Introduction : ",(0,t.jsx)(n.a,{href:"https://doc.pigsty.cc/",children:"https://doc.pigsty.cc/"})]}),"\n",(0,t.jsx)(n.h3,{id:"download",children:"Download"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"curl -L https://get.pigsty.cc/v2.5.1/pigsty-v2.5.1.tgz -o ~/pigsty.tgz \ncurl -L https://get.pigsty.cc/v2.5.1/pigsty-pkg-v2.5.1.el7.x86_64.tgz -o /tmp/pkg.tgz\n"})}),"\n",(0,t.jsx)(n.h3,{id:"install-and-deploy",children:"Install and Deploy"}),"\n",(0,t.jsx)(n.p,{children:"1\u3001set up password-less login for all nodes including self"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"ssh-keygen -t rsa\nssh-copy-id root@hosts\n"})}),"\n",(0,t.jsx)(n.p,{children:"2\u3001initialize in all nodes"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:'bash -c "$(curl -fsSL https://get.pigsty.cc/latest)"  \ncd ~/pigsty\n./bootstrap \n'})}),"\n",(0,t.jsx)(n.p,{children:"3\u3001modify ~/pigsty/pigsty.yml in the primary node as below"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"all:\n  children:\n    # infra cluster for proxy, monitor, alert, etc..\n    infra: { hosts: { 192.168.17.91: { infra_seq: 1 } } }\n    # etcd cluster for ha postgres\n    etcd: { hosts: { 192.168.17.91: { etcd_seq: 1 } }, vars: { etcd_cluster: etcd } }\n    # minio cluster, optional backup repo for pgbackrest\n    #minio: { hosts: { 192.168.17.91: { minio_seq: 1 } }, vars: { minio_cluster: minio } }\n    # postgres cluster 'pg-meta' with single primary instance\n    pg-test:\n      hosts:\n        192.168.17.91: { pg_seq: 1, pg_role: primary }   # primary instance, leader of cluster\n        192.168.25.215: { pg_seq: 2, pg_role: replica }   # replica instance, follower of leader\n        192.168.28.137: { pg_seq: 3, pg_role: replica, pg_offline_query: true } # replica with offline access\n      vars:\n        pg_cluster: pg-test           # define pgsql cluster name\n        pg_users:  [{ name: test , password: test , pgbouncer: true , roles: [ dbrole_admin ] }]\n        pg_databases: [{ name: test }]\n        pg_vip_enabled: true\n        pg_vip_address: 192.168.17.92/24\n        pg_vip_interface: eth0\n        node_tune: tiny\n        pg_conf: tiny.yml\n        node_crontab:  # make a full backup on monday 1am, and an incremental backup during weekdays\n          - '00 01 * * 1 postgres /pg/bin/pg-backup full'\n          - '00 01 * * 2,3,4,5,6,7 postgres /pg/bin/pg-backup'\n  vars:                               # global parameters\n    version: v2.5.1                   # pigsty version string\n    admin_ip: 192.168.17.91             # admin node ip address\n    region: china                     # upstream mirror region: default,china,europe\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"pg_vip_address is needed"})}),"\n",(0,t.jsx)(n.p,{children:"4\u3001install"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"./install.yml \n"})}),"\n",(0,t.jsx)(n.h3,{id:"check",children:"Check"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"patronictl -c /etc/patroni/patroni.yml list\n"})}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.p,{children:"Switch Command\uff1apatronictl -c /etc/patroni/patroni.yml switchover"}),(0,t.jsx)(n.p,{children:"Data Backup Command\uff1a/pg/bin/pg-backup full; Full and incremental backup tasks are configured in /etc/crontab"})]}),"\n",(0,t.jsx)(n.h3,{id:"monitor",children:"Monitor"}),"\n",(0,t.jsx)(n.p,{children:"Grafana"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ini",children:"http://192.168.17.91:3000\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"use your ip address"})})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>l});var t=s(7294);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);