"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[880],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4564:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},s="Use Presto to Query LakeSoul's Table",i={unversionedId:"Usage Docs/setup-presto",id:"Usage Docs/setup-presto",title:"Use Presto to Query LakeSoul's Table",description:"Available since version 2.4.",source:"@site/docs/03-Usage Docs/10-setup-presto.md",sourceDirName:"03-Usage Docs",slug:"/Usage Docs/setup-presto",permalink:"/docs/Usage Docs/setup-presto",draft:!1,editUrl:"https://github.com/lakesoul-io/LakeSoul/tree/main/website/docs/03-Usage Docs/10-setup-presto.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LakeSoul Table Lifecycle Automatic Maintenance and Redundant Data Automatic Cleaning",permalink:"/docs/Usage Docs/clean-redundant-data"},next:{title:"LakeSoul's Supports for Python and Machine Learning",permalink:"/docs/Usage Docs/machine-learning-support"}},l={},c=[{value:"Download Jar package",id:"download-jar-package",level:2},{value:"Configure Presto",id:"configure-presto",level:2},{value:"Configure LakeSoul Meta DB Connection",id:"configure-lakesoul-meta-db-connection",level:2},{value:"Start Presto Client",id:"start-presto-client",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"use-presto-to-query-lakesouls-table"},"Use Presto to Query LakeSoul's Table"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Available since version 2.4.")),(0,a.kt)("p",null,"LakeSoul implements Presto Connector and currently supports reading tables. It can read tables without primary keys and tables with primary keys (including ",(0,a.kt)("a",{parentName:"p",href:"/docs/Usage%20Docs/cdc-ingestion-table"},"CDC format tables"),"). When reading, Merge on Read will be automatically executed to obtain the latest data."),(0,a.kt)("h2",{id:"download-jar-package"},"Download Jar package"),(0,a.kt)("p",null,"You can download the Presto package from the Github Release page: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/lakesoul-io/LakeSoul/releases/download/v2.5.0/lakesoul-presto-2.5.0-presto-0.28.jar"},"https://github.com/lakesoul-io/LakeSoul/releases/download/v2.5.0/lakesoul-presto-2.5.0-presto-0.28.jar")),(0,a.kt)("h2",{id:"configure-presto"},"Configure Presto"),(0,a.kt)("p",null,"Create a new lakesoul subdirectory in the plugin subdirectory under the Presto directory. Place the jar downloaded above into this subdirectory."),(0,a.kt)("p",null,"Create a new ",(0,a.kt)("inlineCode",{parentName:"p"},"etc/catalog/lakesoul.properties")," file (the specific etc directory location can be modified according to the presto deployment):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-properties"},"connector.name=lakesoul\nfs.s3a.access.key=minioadmin1\nfs.s3a.secret.key=minioadmin1\nfs.s3a.bucket=lakesoul-test-bucket\nfs.s3a.endpoint=http://minio:9000\n")),(0,a.kt)("p",null,"The setting items starting with ",(0,a.kt)("inlineCode",{parentName:"p"},"fs.s3a")," are the configuration for accessing S3 and can be modified as needed."),(0,a.kt)("h2",{id:"configure-lakesoul-meta-db-connection"},"Configure LakeSoul Meta DB Connection"),(0,a.kt)("p",null,"Refer to the method in the ",(0,a.kt)("a",{parentName:"p",href:"/docs/Usage%20Docs/setup-meta-env"},"Configure Metadata")," document and use environment variables or JVM property to setup connection to meta DB. For example, JVM properties can be configured in ",(0,a.kt)("a",{parentName:"p",href:"https://prestodb.io/docs/current/installation/deployment.html#jvm-config"},"Presto JVM Config"),"."),(0,a.kt)("h2",{id:"start-presto-client"},"Start Presto Client"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"./bin/presto --catalog lakesoul --schema default\n")))}d.isMDXComponent=!0}}]);