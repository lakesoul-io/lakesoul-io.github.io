"use strict";(self.webpackChunklakesoul_website=self.webpackChunklakesoul_website||[]).push([[2619],{1815:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});var s=n(5893),t=n(1151);const i={},l="LakeSoul Flink CDC Whole Database Synchronization Tutorial",r={id:"Tutorials/flink-cdc-sink/index",title:"LakeSoul Flink CDC Whole Database Synchronization Tutorial",description:"\x3c!--",source:"@site/docs/02-Tutorials/02-flink-cdc-sink/index.md",sourceDirName:"02-Tutorials/02-flink-cdc-sink",slug:"/Tutorials/flink-cdc-sink/",permalink:"/docs/Tutorials/flink-cdc-sink/",draft:!1,unlisted:!1,editUrl:"https://github.com/lakesoul-io/LakeSoul/tree/main/website/docs/02-Tutorials/02-flink-cdc-sink/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"LakeSoul CDC Ingestion via Spark Streaming",permalink:"/docs/Tutorials/consume-cdc-via-spark-streaming"},next:{title:"Snapshot Related API Usage Tutorial",permalink:"/docs/Tutorials/snapshot-manage"}},c={},o=[{value:"1. Prepare the environment",id:"1-prepare-the-environment",level:2},{value:"1.1 Start a local MySQL database",id:"11-start-a-local-mysql-database",level:3},{value:"1.2 Configuring LakeSoul Meta DB and Spark Environment",id:"12-configuring-lakesoul-meta-db-and-spark-environment",level:3},{value:"1.3 Create a table in MySQL in advance and write data",id:"13-create-a-table-in-mysql-in-advance-and-write-data",level:3},{value:"2. Start the sync job",id:"2-start-the-sync-job",level:2},{value:"2.1 Start a local Flink Cluster",id:"21-start-a-local-flink-cluster",level:3},{value:"2.2 Submit LakeSoul Flink CDC Sink job",id:"22-submit-lakesoul-flink-cdc-sink-job",level:3},{value:"2.3 Use Spark SQL to read the synchronized data in the LakeSoul table",id:"23-use-spark-sql-to-read-the-synchronized-data-in-the-lakesoul-table",level:3},{value:"2.4 Observe the synchronization situation after executing Update in MySQL",id:"24-observe-the-synchronization-situation-after-executing-update-in-mysql",level:3},{value:"2.5 Observe the synchronization after executing DDL in MySQL, and read new and old data",id:"25-observe-the-synchronization-after-executing-ddl-in-mysql-and-read-new-and-old-data",level:3},{value:"2.6 Observe the synchronization after creating a new table in MySQL",id:"26-observe-the-synchronization-after-creating-a-new-table-in-mysql",level:3}];function d(e){const a={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"lakesoul-flink-cdc-whole-database-synchronization-tutorial",children:"LakeSoul Flink CDC Whole Database Synchronization Tutorial"}),"\n",(0,s.jsx)(a.p,{children:"LakeSoul Flink CDC Sink supports the entire database synchronization from MySQL to LakeSoul, and can support automatic table creation, automatic schema change, exactly once semantics, etc."}),"\n",(0,s.jsxs)(a.p,{children:["For detailed documentation, please refer to ",(0,s.jsx)(a.a,{href:"/docs/Usage%20Docs/flink-cdc-sync",children:"LakeSoul Flink CDC Synchronization of Entire MySQL Database"})]}),"\n",(0,s.jsx)(a.p,{children:"In this tutorial, we fully demonstrate synchronizing a MySQL database to LakeSoul, including automatic table creation, DDL changes and other operations."}),"\n",(0,s.jsx)(a.h2,{id:"1-prepare-the-environment",children:"1. Prepare the environment"}),"\n",(0,s.jsx)(a.h3,{id:"11-start-a-local-mysql-database",children:"1.1 Start a local MySQL database"}),"\n",(0,s.jsx)(a.p,{children:"It is recommended to use the MySQL Docker image to quickly start a MySQL database instance:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"docker run --name lakesoul-test-mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=test_cdc -p 3306:3306 -d mysql:8\n"})}),"\n",(0,s.jsx)(a.h3,{id:"12-configuring-lakesoul-meta-db-and-spark-environment",children:"1.2 Configuring LakeSoul Meta DB and Spark Environment"}),"\n",(0,s.jsxs)(a.p,{children:["For this part, please refer to ",(0,s.jsx)(a.a,{href:"/docs/Getting%20Started/setup-local-env",children:"Setup a local test environment"})]}),"\n",(0,s.jsxs)(a.p,{children:["Then start a ",(0,s.jsx)(a.code,{children:"spark-sql"})," SQL interactive query command line environment:"]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"$SPARK_HOME/bin/spark-sql --conf spark.sql.extensions=com.dmetasoul.lakesoul.sql.LakeSoulSparkSessionExtension --conf spark.sql.catalog.lakesoul=org.apache.spark.sql.lakesoul.catalog.LakeSoulCatalog --conf spark.sql.defaultCatalog=lakesoul --conf spark.sql.warehouse.dir=/tmp/lakesoul --conf spark.dmetasoul.lakesoul.snapshot.cache.expire.seconds=10\n"})}),"\n",(0,s.jsxs)(a.admonition,{type:"tip",children:[(0,s.jsx)(a.p,{children:"This command starts a Spark local job, adding two options:"}),(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsx)(a.li,{children:"spark.sql.warehouse.dir=/tmp/lakesoul\nThis parameter is set because the default table storage location in Spark SQL needs to be set to the same directory as the Flink job output directory."}),"\n",(0,s.jsx)(a.li,{children:"spark.dmetasoul.lakesoul.snapshot.cache.expire.seconds=10\nThis parameter is set because LakeSoul caches metadata information in Spark, setting a smaller cache expiration time to facilitate querying the latest data."}),"\n"]})]}),"\n",(0,s.jsx)(a.p,{children:"After starting the Spark SQL command line, you can execute:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"SHOW DATABASES;\nSHOW TABLES IN default;\n"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(6847).Z+"",width:"1052",height:"274"})}),"\n",(0,s.jsxs)(a.p,{children:["You can see that there is currently only one ",(0,s.jsx)(a.code,{children:"default"})," database in LakeSoul, and there are no tables in it."]}),"\n",(0,s.jsx)(a.h3,{id:"13-create-a-table-in-mysql-in-advance-and-write-data",children:"1.3 Create a table in MySQL in advance and write data"}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsxs)(a.li,{children:["Install mycli","\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"pip install mycli\n"})}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["Start mycli and connect to the MySQL database","\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"mycli mysql://root@localhost:3306/test_cdc -p root\n"})}),"\n"]}),"\n",(0,s.jsxs)(a.li,{children:["Create table and write data","\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"CREATE TABLE mysql_test_1 (id INT PRIMARY KEY, name VARCHAR(255), type SMALLINT);\nINSERT INTO mysql_test_1 VALUES (1, 'Bob', 10);\nSELECT * FROM mysql_test_1;\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(4165).Z+"",width:"2034",height:"574"})}),"\n",(0,s.jsx)(a.h2,{id:"2-start-the-sync-job",children:"2. Start the sync job"}),"\n",(0,s.jsx)(a.h3,{id:"21-start-a-local-flink-cluster",children:"2.1 Start a local Flink Cluster"}),"\n",(0,s.jsxs)(a.p,{children:["You can download from the Flink download page: ",(0,s.jsx)(a.a,{href:"https://www.apache.org/dyn/closer.lua/flink/flink-1.17.1/flink-1.17.1-bin-scala_2.12.tgz",children:"Flink 1.17"})]}),"\n",(0,s.jsx)(a.p,{children:"Unzip the downloaded Flink installation package:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"tar xf flink-1.17.1-bin-scala_2.12.tgz\nexport FLINK_HOME=${PWD}/flink-1.17.1\n"})}),"\n",(0,s.jsx)(a.p,{children:"Then start a local Flink Cluster:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"$FLINK_HOME/bin/start-cluster.sh\n"})}),"\n",(0,s.jsxs)(a.p,{children:["You can open ",(0,s.jsx)(a.a,{href:"http://localhost:8081",children:"http://localhost:8081"})," to see if the Flink local cluster has started normally:\n",(0,s.jsx)(a.img,{src:n(5033).Z+"",width:"3116",height:"934"})]}),"\n",(0,s.jsx)(a.h3,{id:"22-submit-lakesoul-flink-cdc-sink-job",children:"2.2 Submit LakeSoul Flink CDC Sink job"}),"\n",(0,s.jsx)(a.p,{children:"Submit a LakeSoul Flink CDC Sink job to the Flink cluster started above:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-bash",children:"./bin/flink run -ys 1 -yjm 1G -ytm 2G \\\n   -c org.apache.flink.lakesoul.entry.MysqlCdc\\\n   lakesoul-flink-1.17-2.5.3.jar \\\n   --source_db.host localhost \\\n   --source_db.port 3306 \\\n   --source_db.db_name test_cdc \\\n   --source_db.user root \\\n   --source_db.password root \\\n   --source.parallelism 1 \\\n   --sink.parallelism 1 \\\n   --warehouse_path file:/tmp/lakesoul \\\n   --flink.checkpoint file:/tmp/flink/chk \\\n   --flink.savepoint file:/tmp/flink/svp \\\n   --job.checkpoint_interval 10000 \\\n   --server_time_zone UTC\n"})}),"\n",(0,s.jsxs)(a.p,{children:["The jar package of lakesoul-flink can be downloaded from the ",(0,s.jsx)(a.a,{href:"https://github.com/lakesoul-io/LakeSoul/releases/",children:"Github Release"})," page."]}),"\n",(0,s.jsxs)(a.p,{children:["Refer to ",(0,s.jsx)(a.a,{href:"/docs/Usage%20Docs/flink-cdc-sync",children:"LakeSoul Flink CDC Synchronization of Entire MySQL Database"})," for detailed usage of the Flink job."]}),"\n",(0,s.jsxs)(a.p,{children:["On the ",(0,s.jsx)(a.a,{href:"http://localhost:8081",children:"http://localhost:8081"})," Flink job page, click Running Job to check whether the LakeSoul job is already in the ",(0,s.jsx)(a.code,{children:"Running"})," state."]}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(9509).Z+"",width:"3738",height:"828"})}),"\n",(0,s.jsxs)(a.p,{children:["You can click to enter the job page, and you should see that one data record has been synchronized:\n",(0,s.jsx)(a.img,{src:n(8387).Z+"",width:"3666",height:"1648"})]}),"\n",(0,s.jsx)(a.h3,{id:"23-use-spark-sql-to-read-the-synchronized-data-in-the-lakesoul-table",children:"2.3 Use Spark SQL to read the synchronized data in the LakeSoul table"}),"\n",(0,s.jsx)(a.p,{children:"Execute in Spark SQL Shell:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"SHOW DATABASES;\nSHOW TABLES IN test_cdc;\nDESC test_cdc.mysql_test_1;\nSELECT * FROM test_cdc.mysql_test_1;\n"})}),"\n",(0,s.jsxs)(a.p,{children:["You can see the running result of each statement, that is, a ",(0,s.jsx)(a.code,{children:"test_cdc"})," database is automatically created in ",(0,s.jsxs)(a.strong,{children:["LakeSoul, and a ",(0,s.jsx)(a.code,{children:"mysql_test_1"})," table is automatically created. The fields and primary keys of the table are the same as those of MySQL"]})," (one more rowKinds column, refer to the description in ",(0,s.jsx)(a.a,{href:"/docs/Usage%20Docs/cdc-ingestion-table",children:"LakeSoul CDC Table"}),")."]}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(9625).Z+"",width:"1038",height:"838"})}),"\n",(0,s.jsx)(a.h3,{id:"24-observe-the-synchronization-situation-after-executing-update-in-mysql",children:"2.4 Observe the synchronization situation after executing Update in MySQL"}),"\n",(0,s.jsx)(a.p,{children:"Perform the update in mycli:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"UPDATE mysql_test_1 SET name='Peter' WHERE id=1;\n"})}),"\n",(0,s.jsx)(a.p,{children:"Then read again in LakeSoul:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"SELECT * FROM test_cdc.mysql_test_1;\n"})}),"\n",(0,s.jsxs)(a.p,{children:["You can see that the latest data has been read:\n",(0,s.jsx)(a.img,{src:n(8333).Z+"",width:"876",height:"148"})]}),"\n",(0,s.jsx)(a.h3,{id:"25-observe-the-synchronization-after-executing-ddl-in-mysql-and-read-new-and-old-data",children:"2.5 Observe the synchronization after executing DDL in MySQL, and read new and old data"}),"\n",(0,s.jsx)(a.p,{children:"Modify the structure of the table in mycli:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"ALTER TABLE mysql_test_1 ADD COLUMN new_col FLOAT;\n"})}),"\n",(0,s.jsxs)(a.p,{children:["That is to add a new column at the end, the default is null. Verify the execution result in mycli:\n",(0,s.jsx)(a.img,{src:n(9862).Z+"",width:"1486",height:"992"})]}),"\n",(0,s.jsx)(a.p,{children:"At this point, the table structure has been synchronized in LakeSoul, and we can view the table structure in spark-sql:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"DESC test_cdc.mysql_test_1;\n"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(8395).Z+"",width:"808",height:"418"})}),"\n",(0,s.jsx)(a.p,{children:"At this time, read data from LakeSoul, and the new column is also null:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"SELECT * FROM test_cdc.mysql_test_1;\n"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(8367).Z+"",width:"922",height:"150"})}),"\n",(0,s.jsx)(a.p,{children:"Insert a new piece of data into MySQL:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"INSERT INTO mysql_test_1 VALUES (2, 'Alice', 20, 9.9);\n"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(9543).Z+"",width:"1584",height:"508"})}),"\n",(0,s.jsxs)(a.p,{children:["Read again from LakeSoul:\n",(0,s.jsx)(a.img,{src:n(7864).Z+"",width:"1036",height:"188"})]}),"\n",(0,s.jsx)(a.p,{children:"Delete a piece of data from MySQL:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"delete from mysql_test_1 where id=1;\n"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(8305).Z+"",width:"1228",height:"582"})}),"\n",(0,s.jsxs)(a.p,{children:["Read from LakeSoul:\n",(0,s.jsx)(a.img,{src:n(3737).Z+"",width:"998",height:"152"})]}),"\n",(0,s.jsx)(a.p,{children:"**You can see that LakeSoul reads the synchronized result every time, which is exactly the same as in MySQL. **"}),"\n",(0,s.jsx)(a.h3,{id:"26-observe-the-synchronization-after-creating-a-new-table-in-mysql",children:"2.6 Observe the synchronization after creating a new table in MySQL"}),"\n",(0,s.jsx)(a.p,{children:"Create a new table in MySQL with a different schema from the previous table:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"CREATE TABLE mysql_test_2 (name VARCHAR(100) PRIMARY KEY, phone_no VARCHAR(20));\n"})}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{src:n(3973).Z+"",width:"2026",height:"510"})}),"\n",(0,s.jsxs)(a.p,{children:["In LakeSoul, you can see that the new table has been automatically created, and you can view the table structure:\n",(0,s.jsx)(a.img,{src:n(1785).Z+"",width:"902",height:"490"})]}),"\n",(0,s.jsx)(a.p,{children:"Insert a piece of data into a new MySQL table:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-sql",children:"INSERT INTO mysql_test_2 VALUES ('Bob', '10010');\n"})}),"\n",(0,s.jsxs)(a.p,{children:["LakeSoul also successfully synchronized and read the data of the new table:\n",(0,s.jsx)(a.img,{src:n(9768).Z+"",width:"910",height:"114"})]})]})}function h(e={}){const{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},9509:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/flink-cdc-job-submitted-5afb5e18b04cf3cf79eeb7a0e4aad05b.png"},8387:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/flink-cdc-sync-1-c6a93513ff48347fa8297cfda14f6402.png"},5033:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/flnk-cluster-empty-9dccdcd8ed47252d8d52395ec04aa607.png"},3973:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/mysql-create-table-2-f09877f7865f317881d56e09f70633e6.png"},4165:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/mysql-init-insert-1-2765502bf425a2d1dabb028ea15155ea.png"},9543:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/mysql-insert-new-1-4956bac0d7d6709e1852ffecfae7c509.png"},8305:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/mysql-read-after-delete-30495413d60d01dcbda0f1afda920f5e.png"},9862:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/mysql-update-1-707701b0ae38f5a014cff7935d9d0885.png"},9625:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/spark-read-1-6b5e746a1d6ae5527554c1b0d128883b.png"},8333:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/spark-read-2-86637e8e5623e101c469232eef438c37.png"},8395:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/spark-read-after-add-col-1-e59d8aeada4ad213e81b8c9fe6b28005.png"},8367:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/spark-read-after-add-col-2-5258ab0f98aa664ebcb83ce29f91dd8e.png"},7864:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/spark-read-after-add-col-3-120181b9bbd4280b132fc8c825eb07c6.png"},3737:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/spark-read-after-delete-0ce048ee0d34f1af6f45562c0045e08f.png"},9768:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/spark-read-after-new-table-b6a5db4dabdd816c0f88007ba5d589a8.png"},1785:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/spark-show-after-new-table-13d0f25f28dca4e42dfc6e395aaf8a2d.png"},6847:(e,a,n)=>{n.d(a,{Z:()=>s});const s=n.p+"assets/images/spark-sql-show-db-empty-440f1c01b78ce74f800bc740ece60c92.png"},1151:(e,a,n)=>{n.d(a,{Z:()=>r,a:()=>l});var s=n(7294);const t={},i=s.createContext(t);function l(e){const a=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:a},e.children)}}}]);