"use strict";(self.webpackChunklakesoul_website=self.webpackChunklakesoul_website||[]).push([[7973],{1102:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>i});var r=a(5893),s=a(1151);const t={},o="\u6570\u636e\u66f4\u65b0 (Upsert) \u548c Merge UDF \u4f7f\u7528\u6559\u7a0b",l={id:"Tutorials/upsert-and-merge-udf",title:"\u6570\u636e\u66f4\u65b0 (Upsert) \u548c Merge UDF \u4f7f\u7528\u6559\u7a0b",description:"\x3c!--",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/02-Tutorials/05-upsert-and-merge-udf.md",sourceDirName:"02-Tutorials",slug:"/Tutorials/upsert-and-merge-udf",permalink:"/zh-Hans/docs/Tutorials/upsert-and-merge-udf",draft:!1,unlisted:!1,editUrl:"https://github.com/lakesoul-io/LakeSoul/tree/main/website/docs/02-Tutorials/05-upsert-and-merge-udf.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u5c06LakeSoul\u6570\u636e\u6302\u8f7d\u5230hive meta\u7528\u6cd5\u6559\u7a0b",permalink:"/zh-Hans/docs/Tutorials/data-mount-to-hive"},next:{title:"\u591a\u6d41\u5408\u5e76\u6784\u5efa\u5bbd\u8868\u6559\u7a0b",permalink:"/zh-Hans/docs/Tutorials/mutil-stream-merge"}},d={},i=[{value:"\u81ea\u5b9a\u4e49 merge \u5408\u5e76\u903b\u8f91",id:"\u81ea\u5b9a\u4e49-merge-\u5408\u5e76\u903b\u8f91",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"\u6570\u636e\u66f4\u65b0-upsert-\u548c-merge-udf-\u4f7f\u7528\u6559\u7a0b",children:"\u6570\u636e\u66f4\u65b0 (Upsert) \u548c Merge UDF \u4f7f\u7528\u6559\u7a0b"}),"\n",(0,r.jsx)(n.p,{children:"LakeSoul\u53ef\u4ee5\u652f\u6301\u5bf9\u5df2\u7ecf\u5165\u6e56\u7684\u6570\u636e\u505a\u90e8\u5206\u5b57\u6bb5\u66f4\u65b0\u529f\u80fd\uff0c\u800c\u4e0d\u5fc5\u5c06\u6574\u5f20\u6570\u636e\u8868\u5168\u90e8\u8986\u76d6\u91cd\u5199\uff0c\u907f\u514d\u8fd9\u79cd\u7e41\u91cd\u4e14\u6d6a\u8d39\u8d44\u6e90\u7684\u64cd\u4f5c\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u4e3e\u4e2a\u4f8b\u5b50\u4e00\u5f20\u8868\u6570\u636e\u4fe1\u606f\u5982\u4e0b\uff0cid\u4e3a\u4e3b\u952e\uff08\u5373hashPartitions\uff09\uff0c\u76ee\u524d\u9700\u8981\u6839\u636e\u4e3b\u952e\u5b57\u6bb5\uff0c\u5bf9phone_number\u505a\u5b57\u6bb5\u4fee\u6539\u5904\u7406\u3002"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"id"}),(0,r.jsx)(n.th,{children:"name"}),(0,r.jsx)(n.th,{children:"phone_number"}),(0,r.jsx)(n.th,{children:"address"}),(0,r.jsx)(n.th,{children:"job"}),(0,r.jsx)(n.th,{children:"company"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"Jake"}),(0,r.jsx)(n.td,{children:"13700001111"}),(0,r.jsx)(n.td,{children:"address_1"}),(0,r.jsx)(n.td,{children:"job_1"}),(0,r.jsx)(n.td,{children:"company_2"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:"Make"}),(0,r.jsx)(n.td,{children:"13511110000"}),(0,r.jsx)(n.td,{children:"address_2"}),(0,r.jsx)(n.td,{children:"job_2"}),(0,r.jsx)(n.td,{children:"company_2"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"\u53ef\u4ee5\u4f7f\u7528 upsert \u6765\u5b9e\u73b0\u5bf9\u4efb\u610f\u884c\u4e2d\u4efb\u610f\u4e00\u4e2a\u5b57\u6bb5\u7684\u66f4\u65b0\u3002upsert\u9700\u8981\u5305\u542b\u4e3b\u952e (id) \u548c\u9700\u8981\u4fee\u6539\u7684 address \u4fe1\u606f\uff0c\u518d\u6b21\u8bfb\u53d6\u6574\u5f20\u8868\u6570\u636e address \u4fbf\u53ef\u5c55\u793a\u4e3a\u4fee\u6539\u540e\u7684\u5b57\u6bb5\u4fe1\u606f\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:'import org.apache.spark.sql._\nval spark = SparkSession.builder.master("local")\n  .config("spark.sql.extensions", "com.dmetasoul.lakesoul.sql.LakeSoulSparkSessionExtension")\n  .getOrCreate()\nimport spark.implicits._\n\nval df = Seq(("1", "Jake", "13700001111", "address_1", "job_1", "company_1"),("2", "Make", "13511110000", "address_2", "job_2", "company_2"))\n  .toDF("id", "name", "phone_number", "address", "job", "company")\nval tablePath = "s3a://bucket-name/table/path/is/also/table/name"\n\ndf.write\n  .mode("append")\n  .format("lakesoul")\n  .option("hashPartitions","id")\n  .option("hashBucketNum","2")\n  .save(tablePath)\n\nval lakeSoulTable = LakeSoulTable.forPath(tablePath)\nval extraDF = Seq(("1", "address_1_1")).toDF("id","address")\nlakeSoulTable.upsert(extraDF)\nlakeSoulTable.toDF.show()\n\n/**\n *  result:\n *  +---+----+------------+-----------+-----+---------+\n *  | id|name|phone_number|    address|  job|  company|\n *  +---+----+------------+-----------+-----+---------+\n *  |  1|Jake| 13700001111|address_1_1|job_1|company_1|\n *  |  2|Make| 13511110000|  address_2|job_2|company_2|\n *  +---+----+------------+-----------+-----+---------+\n */\n'})}),"\n",(0,r.jsx)(n.h2,{id:"\u81ea\u5b9a\u4e49-merge-\u5408\u5e76\u903b\u8f91",children:"\u81ea\u5b9a\u4e49 merge \u5408\u5e76\u903b\u8f91"}),"\n",(0,r.jsx)(n.p,{children:'LakeSoul \u9ed8\u8ba4 merge \u89c4\u5219\uff0c\u5373\u6570\u636e\u66f4\u65b0\u540e\u53d6\u6700\u540e\u4e00\u6761\u8bb0\u5f55\u4f5c\u4e3a\u8be5\u5b57\u6bb5\u6570\u636e (org.apache.spark.sql.execution.datasources.v2.merge.parquet.batch.merge_operator.DefaultMergeOp)\u3002\u5728\u6b64\u57fa\u7840\u4e0a\uff0cLakeSoul \u5185\u7f6e\u6269\u5c55\u4e86\u51e0\u79cd\u6570\u636e merge \u903b\u8f91\uff0c\u5bf9 Int/Long \u5b57\u6bb5\u505a\u52a0\u548c merge(MergeOpInt/MergeOpLong)\u3001\u5bf9\u975e\u7a7a\u5b57\u6bb5\u66f4\u65b0 (MergeNonNullOp)\u3001\u4ee5","\u62fc\u63a5\u5b57\u7b26\u4e32 merge \u65b9\u5f0f\u3002'}),"\n",(0,r.jsx)(n.p,{children:"\u4e0b\u9762\u4ee5\u5bf9\u975e\u7a7a\u5b57\u6bb5\u66f4\u65b0 (MergeNonNullOp) \u4e3a\u4f8b\uff0c\u501f\u7528\u4e0a\u9762\u8868\u683c\u6570\u636e\u6837\u4f8b\u3002\u6570\u636e\u5199\u5165\u65f6\u540c\u6837\u4ee5 upsert \u65b9\u5f0f\u8fdb\u884c\u66f4\u65b0\u5199\u5165\uff0c\u7136\u540e\u5728\u6570\u636e\u8bfb\u53d6\u65f6\u9700\u8981\u6ce8\u518c merger \u903b\u8f91\uff0c\u7136\u540e\u8fdb\u884c\u8bfb\u53d6\u5373\u53ef\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scala",children:'import org.apache.spark.sql.execution.datasources.v2.merge.parquet.batch.merge_operator.MergeNonNullOp\nimport org.apache.spark.sql.functions.expr\nimport org.apache.spark.sql._\nval spark = SparkSession.builder.master("local")\n  .config("spark.sql.extensions", "com.dmetasoul.lakesoul.sql.LakeSoulSparkSessionExtension")\n  .getOrCreate()\nimport spark.implicits._\n\nval df = Seq(("1", "Jake", "13700001111", "address_1", "job_1", "company_1"),("2", "Make", "13511110000", "address_2", "job_2", "company_2"))\n  .toDF("id", "name", "phone_number", "address", "job", "company")\n\nval tablePath = "s3a://bucket-name/table/path/is/also/table/name"\n\ndf.write\n  .mode("append")\n  .format("lakesoul")\n  .option("hashPartitions","id")\n  .option("hashBucketNum","2")\n  .save(tablePath)\n\nval lakeSoulTable = LakeSoulTable.forPath(tablePath)\nval extraDF = Seq(("1", "null", "13100001111", "address_1_1", "job_1_1", "company_1_1"),("2", "null", "13111110000", "address_2_2", "job_2_2", "company_2_2"))\n  .toDF("id", "name", "phone_number", "address", "job", "company")\n\nnew MergeNonNullOp().register(spark, "NotNullOp")\nlakeSoulTable.toDF.show()\nlakeSoulTable.upsert(extraDF)\nlakeSoulTable.toDF.withColumn("name", expr("NotNullOp(name)")).show()\n\n/**\n *  result\n *  +---+----+------------+-----------+-------+-----------+\n *  | id|name|phone_number|    address|    job|    company|\n *  +---+----+------------+-----------+-------+-----------+\n *  |  1|Jake| 13100001111|address_1_1|job_1_1|company_1_1|\n *  |  2|Make| 13111110000|address_2_2|job_2_2|company_2_2|\n *  +---+----+------------+-----------+-------+-----------+\n */\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\u7528\u6237\u4e5f\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49 MergeOperator (\u5b9e\u73b0 ",(0,r.jsx)(n.code,{children:"trait org.apache.spark.sql.execution.datasources.v2.merge.parquet.batch.merge_operator.MergeOperator"}),") \u6765\u81ea\u5b9a\u4e49 Merge \u65f6\u7684\u903b\u8f91\uff0c\u80fd\u591f\u7075\u6d3b\u5730\u5b9e\u73b0\u6570\u636e\u9ad8\u6548\u5165\u6e56\u3002"]})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>l,a:()=>o});var r=a(7294);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);