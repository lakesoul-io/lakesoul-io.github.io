"use strict";(self.webpackChunklakesoul_website=self.webpackChunklakesoul_website||[]).push([[4423],{5346:(a,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(5893),t=n(1151);const o={},s="\u589e\u91cf\u67e5\u8be2\u529f\u80fd\u6559\u7a0b",l={id:"Tutorials/incremental-query",title:"\u589e\u91cf\u67e5\u8be2\u529f\u80fd\u6559\u7a0b",description:"\x3c!--",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/02-Tutorials/08-incremental-query.md",sourceDirName:"02-Tutorials",slug:"/Tutorials/incremental-query",permalink:"/zh-Hans/docs/Tutorials/incremental-query",draft:!1,unlisted:!1,editUrl:"https://github.com/lakesoul-io/LakeSoul/tree/main/website/docs/02-Tutorials/08-incremental-query.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Kafka \u591a topic \u6570\u636e\u5165 LakeSoul \u6559\u7a0b",permalink:"/zh-Hans/docs/Tutorials/kafka-topics-data-to-lakesoul"},next:{title:"\u914d\u7f6e LakeSoul \u5143\u6570\u636e\u5e93",permalink:"/zh-Hans/docs/Usage Docs/setup-meta-env"}},i={},p=[{value:"\u589e\u91cf\u8bfb",id:"\u589e\u91cf\u8bfb",level:2},{value:"\u6d41\u5f0f\u8bfb",id:"\u6d41\u5f0f\u8bfb",level:2},{value:"python\u63a5\u53e3\u6559\u7a0b",id:"python\u63a5\u53e3\u6559\u7a0b",level:2}];function u(a){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.a)(),...a.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"\u589e\u91cf\u67e5\u8be2\u529f\u80fd\u6559\u7a0b",children:"\u589e\u91cf\u67e5\u8be2\u529f\u80fd\u6559\u7a0b"}),"\n",(0,r.jsx)(e.p,{children:"LakeSoul\u63d0\u4f9b\u57fa\u4e8e\u65f6\u95f4\u6233\u7684\u589e\u91cf\u67e5\u8be2 API\uff0c\u65b9\u4fbf\u7528\u6237\u83b7\u53d6\u81ea\u7ed9\u5b9a\u65f6\u95f4\u6233\u4ee5\u540e\u65b0\u589e\u7684\u6570\u636e\u6d41\u3002\u7528\u6237\u901a\u8fc7\u6307\u5b9a\u8d77\u59cb\u65f6\u95f4\u6233\u548c\u7ed3\u675f\u65f6\u95f4\u6233\uff0c\u53ef\u4ee5\u67e5\u8be2\u8fd9\u4e00\u65f6\u95f4\u8303\u56f4\u5185\u7684\u589e\u91cf\u6570\u636e\uff0c\u5982\u679c\u672a\u6307\u5b9a\u7ed3\u675f\u65f6\u95f4\u6233\uff0c\u5219\u67e5\u8be2\u8d77\u59cb\u65f6\u95f4\u5230\u5f53\u524d\u6700\u65b0\u65f6\u95f4\u7684\u589e\u91cf\u6570\u636e\u3002"}),"\n",(0,r.jsx)(e.p,{children:"LakeSoul\u5171\u652f\u6301\u56db\u79cdcommit\u64cd\u4f5c\uff1amergeCommit\uff1bappendCommit\uff1bcompactCommit\uff1bupdateCommit\uff0c\u5bf9\u4e8eupdate\u64cd\u4f5c\u7531\u4e8e\u5386\u53f2\u6570\u636e\u6bcf\u6b21\u5408\u5e76\u4f1a\u751f\u6210\u65b0\u6587\u4ef6\uff0c\u65e0\u6cd5\u83b7\u53d6\u589e\u91cf\u6587\u4ef6\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u589e\u91cf\u67e5\u8be2\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u53ef\u9009\u53c2\u6570\u53ca\u542b\u4e49"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-Scala",children:'1.\u5206\u533a\u4fe1\u606f\r\noption(LakeSoulOptions.PARTITION_DESC, "range=range1")\r\noption(LakeSoulOptions.HASH_PARTITIONS, "hash")\r\noption(LakeSoulOptions.HASH_BUCKET_NUM, "2")\r\n\u5982\u679c\u672a\u6307\u5b9a\u5206\u533a\u4fe1\u606f\uff0c\u5219\u9ed8\u8ba4\u9488\u5bf9\u6240\u6709\u5206\u533a\u8fdb\u884c\u589e\u91cf\u67e5\u8be2\uff0c\u5982\u679c\u6ca1\u6709range\uff0c\u5219\u5fc5\u987b\u6307\u5b9ahash\r\n2.\u8d77\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\u6233\r\noption(LakeSoulOptions.READ_START_TIME, "2022-01-01 15:15:15")\r\noption(LakeSoulOptions.READ_END_TIME, "2022-01-01 20:15:15")\r\n3.\u65f6\u533a\u4fe1\u606f\r\noption(LakeSoulOptions.TIME_ZONE,"Asia/Sahanghai")\r\n\u5982\u679c\u4e0d\u6307\u5b9a\u65f6\u95f4\u6233\u7684\u65f6\u533a\u4fe1\u606f\uff0c\u5219\u9ed8\u8ba4\u4e3a\u6309\u672c\u673a\u65f6\u533a\u5904\u7406\r\n4.\u8bfb\u7c7b\u578b\r\noption(LakeSoulOptions.READ_TYPE, "incremental")\r\n\u53ef\u4ee5\u6307\u5b9a\u589e\u91cf\u8bfb"incremental"\uff0c\u5feb\u7167\u8bfb"snapshot"\uff0c\u4e0d\u6307\u5b9a\u9ed8\u8ba4\u5168\u91cf\u8bfb\u3002\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\u589e\u91cf\u8bfb",children:"\u589e\u91cf\u8bfb"}),"\n",(0,r.jsx)(e.p,{children:"\u652f\u6301\u7b80\u5355\u7684upsert\u573a\u666f\u548cCDC\u573a\u666f\u4e0b\u7684\u589e\u91cf\u8bfb\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u901a\u8fc7\u8c03\u7528LakeSoulTable.forPath()\u51fd\u6570\u8fdb\u884c\u67e5\u8be2\uff0c\u53e6\u4e00\u79cd\u662f\u901a\u8fc7spark.read\u6307\u5b9a\u9009\u9879\u8fdb\u884c\u589e\u91cf\u8bfb\uff0c\u53ef\u4ee5\u83b7\u5f97\u6307\u5b9a\u5206\u533a\u5728\u8d77\u6b62\u65f6\u95f4\u8303\u56f4\u5185\u7684\u589e\u91cf\u6570\u636e\uff0c\u83b7\u53d6\u7684\u589e\u91cf\u6570\u636e\u65f6\u95f4\u533a\u95f4\u4e3a\u524d\u95ed\u540e\u5f00\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scala",children:'import com.dmetasoul.lakesoul.tables.LakeSoulTable\r\nimport org.apache.spark.sql._\r\nval spark = SparkSession.builder.master("local")\r\n  .config("spark.sql.extensions", "com.dmetasoul.lakesoul.sql.LakeSoulSparkSessionExtension")\r\n  .getOrCreate()\r\n\r\nval tablePath = "s3a://bucket-name/table/path/is/also/table/name"\r\n// \u9488\u5bf9\u7ed9\u5b9arange\u548c\u65f6\u95f4\u6233\uff0c\u8fdb\u884c\u589e\u91cf\u8bfb,incremental\u8868\u793a\u589e\u91cf\u8bfb\u7c7b\u578b\r\n// \u4f8b\u5982\u8bfb\u53d6range1\u5206\u533a\u4ee5\u4e0a\u6d77\u65f6\u533a\u4e3a\u6807\u51c6\u57282023-01-01 15:15:00\u52302023-01-01 15:20:00\u65f6\u95f4\u8303\u56f4\u5185\u7684\u589e\u91cf\u6570\u636e\r\n// \u7b2c\u4e00\u79cd\u65b9\u5f0f\uff0c\u901a\u8fc7forPathIncremental\u8fdb\u884c\u589e\u91cf\u8bfb\uff0c\u4e0d\u6307\u5b9a\u5206\u533a\u5219\u8f93\u5165""\uff0c\u4e0d\u8f93\u5165\u65f6\u533a\u53c2\u6570\u5219\u9ed8\u8ba4\u4f7f\u7528\u672c\u673a\u7cfb\u7edf\u65f6\u533a\r\nval lake1 = LakeSoulTable.forPathIncremental(tablePath, "range=range1", "2023-01-01 15:15:00", "2023-01-01 15:20:00")\r\nval lake2 = LakeSoulTable.forPathIncremental(tablePath, "range=range1", "2023-01-01 15:15:00", "2023-01-01 15:20:00","Asia/Shanghai")\r\n\r\n// \u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u901a\u8fc7spark.read\u6307\u5b9a\u9009\u9879\u8fdb\u884c\u589e\u91cf\u8bfb\r\nval lake3 = spark.read.format("lakesoul")\r\n  .option(LakeSoulOptions.PARTITION_DESC, "range=range1")\r\n  .option(LakeSoulOptions.READ_START_TIME, "2023-01-01 15:15:00")\r\n  .option(LakeSoulOptions.READ_END_TIME, "2023-01-01 15:20:00")\r\n  .option(LakeSoulOptions.TIME_ZONE,"Asia/Shanghai")\r\n  .option(LakeSoulOptions.READ_TYPE, "incremental")\r\n  .load(tablePath)\n'})}),"\n",(0,r.jsx)(e.h2,{id:"\u6d41\u5f0f\u8bfb",children:"\u6d41\u5f0f\u8bfb"}),"\n",(0,r.jsx)(e.p,{children:"LakeSoul\u652f\u6301 Spark Structured Streaming read\uff0c\u6d41\u5f0f\u8bfb\u57fa\u4e8e\u589e\u91cf\u67e5\u8be2\uff0c\u901a\u8fc7spark.readStream\u6307\u5b9a\u9009\u9879\u8fdb\u884c\u6d41\u5f0f\u8bfb\uff0c\u53ef\u4ee5\u83b7\u5f97\u5b9e\u65f6\u6570\u636e\u6d41\u4e2d\u6307\u5b9a\u5206\u533a\u4e0b\u6bcf\u4e00\u6279\u6b21\u66f4\u65b0\u7684\u589e\u91cf\u6570\u636e\u3002\u6307\u5b9a\u7684\u8d77\u59cb\u65f6\u95f4\u9700\u8981\u65e9\u4e8e\u5b9e\u65f6\u6570\u636e\u7684\u6444\u5165\u65f6\u95f4\u3002"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-Scala",children:'import com.dmetasoul.lakesoul.tables.LakeSoulTable\r\nimport org.apache.spark.sql._\r\nval spark = SparkSession.builder.master("local")\r\n  .config("spark.sql.extensions", "com.dmetasoul.lakesoul.sql.LakeSoulSparkSessionExtension")\r\n  .getOrCreate()\r\nval tablePath = "s3a://bucket-name/table/path/is/also/table/name"\r\n\r\n// \u901a\u8fc7spark.readStream\u6307\u5b9a\u9009\u9879\u8fdb\u884c\u6d41\u5f0f\u8bfb\uff0c\u8bfb\u53d6range1\u5206\u533a\u4ee5\u4e0a\u6d77\u65f6\u533a\u4e3a\u6807\u51c6\u57282023-01-01 15:00:00\u53ca\u4e4b\u540e\u7684\u589e\u91cf\u6570\u636e\uff0c\u6bcf1\u79d2\u89e6\u53d1\u4e00\u6b21\u8bfb\u53d6\uff0c\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u63a7\u5236\u53f0\r\nspark.readStream.format("lakesoul")\r\n  .option(LakeSoulOptions.PARTITION_DESC, "range=range1")\r\n  .option(LakeSoulOptions.READ_START_TIME, "2022-01-01 15:00:00")\r\n  .option(LakeSoulOptions.TIME_ZONE,"Asia/Shanghai")\r\n  .option(LakeSoulOptions.READ_TYPE, "incremental")\r\n  .load(tablePath)\r\n  .writeStream.format("console")\r\n  .trigger(Trigger.ProcessingTime(1000))\r\n  .start()\r\n  .awaitTermination()\n'})}),"\n",(0,r.jsx)(e.h2,{id:"python\u63a5\u53e3\u6559\u7a0b",children:"python\u63a5\u53e3\u6559\u7a0b"}),"\n",(0,r.jsx)(e.p,{children:"\u5c06LakeSoul/python/lakesoul\u6587\u4ef6\u5939\u653e\u5165spark/python/pyspark\u4e2d\uff0c\u901a\u8fc7\u63d0\u4f9bpyspark.lakesoul\u6a21\u5757\uff0c\u5b9e\u73b0\u5feb\u7167\u8bfb\u3001\u589e\u91cf\u8bfb\u548c\u6d41\u5f0f\u8bfb\u7684python API"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-Python",children:'# \u4f7f\u7528spark 3.3.x\u7248\u672c\u8fd0\u884cpyspark\u6d4b\u8bd5\r\nfrom pyspark.lakesoul.tables import LakeSoulTable\r\nfrom pyspark.sql import SparkSession\r\n\r\nspark = SparkSession.builder \\\r\n    .appName("Stream Test") \\\r\n    .master(\'local[4]\') \\\r\n    .config("spark.ui.enabled", "false") \\\r\n    .config("spark.sql.shuffle.partitions", "5") \\\r\n    .config("spark.sql.extensions", "com.dmetasoul.lakesoul.sql.LakeSoulSparkSessionExtension") \\\r\n    .config("spark.sql.catalog.lakesoul", "org.apache.spark.sql.lakesoul.catalog.LakeSoulCatalog") \\\r\n    .config("spark.sql.defaultCatalog", "lakesoul") \\\r\n    .config("spark.sql.warehouse.dir", "/tmp/testPyspark") \\\r\n    .getOrCreate()\r\ntablePath = "s3a://bucket-name/table/path/is/also/table/name"\r\n    \r\ndf = spark.createDataFrame([(\'hash1\', 11),(\'hash2\', 44),(\'hash3\', 55)],["key","value"])\r\n# upsert \u8981\u6c42\u5fc5\u987b\u6307\u5b9ahashPartition\uff0c\u53ef\u4ee5\u4e0d\u6307\u5b9arangePartition\r\ndf.write.format("lakesoul")\r\n    .mode("append")\r\n    .option("hashPartitions", "key")\r\n    .option("hashBucketNum", "2")\r\n    .option("shortTableName", "tt")\r\n    .save(tablePath)\r\nlake = LakeSoulTable.forPath(spark, tablePath)\r\ndf_upsert = spark.createDataFrame([(\'hash5\', 100)],["key","value"])\r\n# \u901a\u8fc7upsert\u4ea7\u751f\u589e\u91cf\u6570\u636e\uff0c\u7528\u4e8e\u6d4b\u8bd5\r\nlake.upsert(df_upsert)\r\n\r\n\r\n#\u5feb\u7167\u8bfb\u7684\u4e24\u79cd\u65b9\u6cd5,forPathSnapshot\u7701\u7565\u8f93\u5165\u65f6\u533a\u53c2\u6570\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528\u672c\u673a\u7cfb\u7edf\u65f6\u533a\r\nlake = spark.read.format("lakesoul")\r\n    .option("readendtime", "2023-02-28 14:45:00")\r\n    .option("readtype", "snapshot")\r\n    .load(tablePath) \r\nlake = LakeSoulTable.forPathSnapshot(spark,tablePath,"","2023-02-28 14:45:00","Asia/Shanghai")\r\n\r\n#\u589e\u91cf\u8bfb\u7684\u4e24\u79cd\u65b9\u6cd5\uff0cforPathIncremental\u7701\u7565\u8f93\u5165\u65f6\u533a\u53c2\u6570\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528\u672c\u673a\u7cfb\u7edf\u65f6\u533a\r\nlake = spark.read.format("lakesoul")\r\n    .option("readstarttime", "2023-02-28 14:45:00")\r\n    .option("readendtime", "2023-02-28 14:50:00")\r\n    .option("timezone","Asia/Shanghai")\r\n    .option("readtype", "incremental")\r\n    .load(tablePath) \r\nlake = LakeSoulTable.forPathIncremental(spark,tablePath,"","2023-02-28 14:45:00","2023-02-28 14:50:00","Asia/Shanghai")\r\n\r\n#\u6d41\u5f0f\u8bfb\uff0c\u9700\u8981\u5f00\u4e24\u4e2apyspark\u7a97\u53e3\uff0c\u4e00\u4e2a\u7528\u4e8e\u4fee\u6539\u6570\u636e\u4ea7\u751f\u591a\u7248\u672c\u6570\u636e\uff0c\u4e00\u4e2a\u7528\u4e8e\u6267\u884c\u6d41\u5f0f\u8bfb\r\nspark.readStream.format("lakesoul")\r\n    .option("readstarttime", "2023-02-28 14:45:00")\r\n    .option("timezone","Asia/Shanghai")\r\n    .option("readtype", "incremental")\r\n    .load(tablePath)\r\n    .writeStream.format("console")\r\n    .trigger(processingTime=\'2 seconds\')\r\n    .start()\r\n    .awaitTermination()\n'})})]})}function c(a={}){const{wrapper:e}={...(0,t.a)(),...a.components};return e?(0,r.jsx)(e,{...a,children:(0,r.jsx)(u,{...a})}):u(a)}},1151:(a,e,n)=>{n.d(e,{Z:()=>l,a:()=>s});var r=n(7294);const t={},o=r.createContext(t);function s(a){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function l(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(t):a.components||t:s(a.components),r.createElement(o.Provider,{value:e},a.children)}}}]);